[tool.poetry]
name = "openapi-spec-tools"
version = "0.4.0"
description = "OpenAPI specification tools for analyzing, updating, and generating a CLI."
authors = ["Rick Porter <rickwporter@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
pyyaml = "^6.0.2"
typer = "^0.16.0"
rich = "^14.0.0"
requests = "2.32.4"

[tool.poetry.scripts]
oas = "openapi_spec_tools.oas:app"
cli-gen = "openapi_spec_tools.cli_gen.cli:app"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
ruff = "^0.9.2"
black = "^24.10.0"
coverage = "^7.6.10"

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "W",  # pycodestyle warnings
]
fixable = [
    "D", "I",
]

[tool.ruff.lint.isort]
force-single-line = true
split-on-trailing-comma = true

[tool.ruff.lint.pylint]
max-args = 25
max-branches = 12
max-returns = 10
max-statements = 75

[tool.ruff.lint.per-file-ignores]
# ignore the unused imports in init
"__init__.py" = ["F401"]
"tests/cli_gen/cli_output.py" = ["W291"]
"tests/*" = [
     # no need for docstrings on tests
    "D100", "D101", "D102", "D103", "D104", "D105", "D106",
    "D200",
    "D300", "D301",
    "D400", "D401", "D402", "D403", "D404", "D415",
]
"openapi_spec_tools/oas.py" = [
    "D103", # CLI functions don't need docstrings
]
"openapi_spec_tools/cli_gen/cli.py" = [
    "D103", # CLI functions don't need docstrings
]

[tool.pytest.ini_options]
addopts = [
  "--strict-config",
  "--strict-markers",
]
xfail_strict = true
junit_family = "xunit2"

[tool.coverage.run]
data_file = ".coverage"
source = [
    "openapi_spec_tools",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    'if __name__ == "__main__":',
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
